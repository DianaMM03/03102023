#### load R data ---------------------
# data()  # see a list of all data sets in "datasets" package
### To load the data iris
# data(iris)
d <- iris
#### Easy Base R plots -------------------
plot(d)
#### Open data from R ----------------------------
### Package 'datasets' in R has several data files
### very useful for base R examples.
### Other packages may have their own internal data for their examples.
data()  # Look to data files
#### Open data from R ----------------------------
### Package 'datasets' in R has several data files
### very useful for base R examples.
### Other packages may have their own internal data for their examples.
data()  # Look to data files
#### Open data from R ----------------------------
### Package 'datasets' in R has several data files
### very useful for base R examples.
### Other packages may have their own internal data for their examples.
data()  # Look to data files
install.packages(c("alluvial", "ggplot2", "ggpubr"))
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0.01, 0)) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE',
subtitle = 'Mean temperatures (Fahrenheit) by month for 2016\nData: Original CSV from the Weather Underground') +
theme_ridges(font_size = 13, grid = TRUE) + theme(axis.title.y = element_blank())
theme_ridges(font_size = 13, grid = TRUE) + theme(axis.title.y = element_blank()
---
title: Example of Quarto document
plot(Sepal.Length ~ Sepal.Width, data = d)
#### More elaborated plots ---------------
### dotplot
plot(Sepal.Length ~ Sepal.Width, data = d,
main = "Iris sepal proportions",
col = Species,
xlab = "Sepal width (mm)",
ylab = "Sepal length (mm)")
legend("topright", title = "Species",
legend = c("Iris setosa", "Iris versicolor", "Iris virginica"),
pch = 1, col = 1:3, text.font = c(3,3,3))
legend("topright", title = "Species",
legend = c("Iris setosa", "Iris versicolor", "Iris virginica"),
pch = 1, col = 1:3, text.font = c(3,3,3))
### Let's select two of them
View(iris)
setwd("D:/Cursuri doctorat UPV/R-Studio 2023")
lang: en-EN
---
title: "Example of Rmarkdown document"
View(InsectSprays)
#### load R data ---------------------
# data()  # see a list of all data sets in "datasets" package
### To load the data iris
# data(iris)
d <- iris
#### Easy Base R plots -------------------
plot(d)
View(d)
#### load R data ---------------------
# data()  # see a list of all data sets in "datasets" package
### To load the data iris
# data(iris)
d <- iris
#### Easy Base R plots -------------------
plot(d)
plot(Sepal.Length ~ Sepal.Width, data = d)
plot(Sepal.Length ~ Sepal.Width, data = d, col = Species)
#### Open data from R ----------------------------
### Package 'datasets' in R has several data files
### very useful for base R examples.
### Other packages may have their own internal data for their examples.
data()  # Look to data files
#### Open data from R ----------------------------
### Package 'datasets' in R has several data files
### very useful for base R examples.
### Other packages may have their own internal data for their examples.
data()  # Look to data files
#### Densities ------------------------------------------
### from https://www.r-graph-gallery.com/
library(ggplot2)
ggplot(data = diamonds, aes(x = price, group = cut, fill = cut)) +
geom_density(adjust = 1.5, alpha = .3) +
theme_classic()
#### Scatterplot ----------------------------------------
ggplot(data = mpg, aes(x = displ, y = hwy, col = cyl)) +
geom_smooth() +
geom_point() +
theme_classic()
#### Scatterplot with equation --------------------------
### from http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/78-perfect-scatter-plots-with-correlation-and-marginal-histograms/
library(ggpubr)
d <- mtcars
d$cyl <- as.factor(d$cyl)
ggscatter(d, x = "wt", y = "mpg",
add = "reg.line",                         # Add regression line
conf.int = TRUE,                          # Add confidence interval
color = "cyl", palette = "jco",           # Color by groups "cyl"
shape = "cyl"                             # Change point shape by groups "cyl"
) +
stat_cor(aes(color = cyl), label.x = 3)           # Add correlation coefficient
#### Boxplot and violinplot -----------------------------
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len)) +
geom_violin(trim = FALSE, fill = "gray") +
labs(title = "Plot of length  by dose", x = "Dose (mg)", y = "Length") +
geom_boxplot(width = 0.1) +
theme_classic()
#### Alluvial plot ---------------------------------------
library(alluvial)
# Titanic data
tit <- as.data.frame(Titanic)
# 4d
alluvial( tit[,1:4], freq=tit$Freq, border=NA,
hide = tit$Freq < quantile(tit$Freq, .50),
col=ifelse( tit$Class == "3rd" & tit$Sex == "Male", "red", "gray") )
library(ggplot2)
library(viridis)
library(ggridges)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0.01, 0)) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE',
subtitle = 'Mean temperatures (Fahrenheit) by month for 2016\nData: Original CSV from the Weather Underground') +
theme_ridges(font_size = 13, grid = TRUE) + theme(axis.title.y = element_blank())
---
title: Example of Quarto document
#### load R data ---------------------
# data()  # see a list of all data sets in "datasets" package
### To load the data iris
# data(iris)
d <- iris
#### load R data ---------------------
# data()  # see a list of all data sets in "datasets" package
### To load the data iris
# data(iris)
d <- iris
View(d)
#### load R data ---------------------
# data()  # see a list of all data sets in "datasets" package
### To load the data iris
# data(iris)
d <- iris
#### Easy Base R plots -------------------
plot(d)
View(d)
?iris
View(d)
#### Easy Base R plots -------------------
plot(d)
plot(Sepal.Length ~ Sepal.Width, data = d)
plot(Sepal.Length ~ Sepal.Width, data = d, col = Species)
plot(Sepal.Length ~ Species, data = d)
plot(Species ~ Sepal.Length, data = d)
#### More elaborated plots ---------------
### dotplot
plot(Sepal.Length ~ Sepal.Width, data = d,
main = "Iris sepal proportions",
col = Species,
xlab = "Sepal width (mm)",
ylab = "Sepal length (mm)")
legend("topright", title = "Species",
legend = c("Iris setosa", "Iris versicolor", "Iris virginica"),
pch = 1, col = 1:3, text.font = c(3,3,3))
### Read the excel file. By default read the 1st sheet
xls.iris <- read_excel("data/iris-sprays.xlsx")
### To read other sheet, you have to name it
xls.sprays <- read_excel("data/iris-sprays.xlsx", sheet = "sprays")
data/iris-sprays.xlsx
read_excel
### To read other sheet, you have to name it
xls.sprays <- read_excel("data/iris-sprays.xlsx", sheet = "sprays")
#### Import data from Excel ----------------------
### We need other package to read Excel
# install.packages('readxl')
library(readxl)
install.packages(c("readxl", "writexl"))
### Read the excel file. By default read the 1st sheet
xls.iris <- read_excel("data/iris-sprays.xlsx")
d0 <- gsheet2tbl(u)
#### Export data to Excel ------------------------
### We need to install a package.
### The code of install.packages is always commented.
### Select the code and run (or uncomment, run and comment again).
# install.packages("writexl")
### Load the installed package
library(writexl)
#### Import data from Excel ----------------------
### We need other package to read Excel
# install.packages('readxl')
library(readxl)
install.packages("readxl")
### Read the excel file. By default read the 1st sheet
xls.iris <- read_excel("data/iris-sprays.xlsx")
#### Import data from Excel ----------------------
### We need other package to read Excel
# install.packages('readxl')
library(readxl)
### Read the excel file. By default read the 1st sheet
xls.iris <- read_excel("data/iris-sprays.xlsx")
### To read other sheet, you have to name it
xls.sprays <- read_excel("data/iris-sprays.xlsx", sheet = "sprays")
#### Package to download data directly from Drive spreadsheets -------
# install.packages('gsheet')
library(gsheet)
u <-  # google sheet adress
'docs.google.com/spreadsheets/d/1a1IBESUl__i2GcH4d-52MVEyXNytpTua7Vdxr0TXkhQ/edit?usp=sharing'
d0 <- gsheet2tbl(u)
#### Densities ------------------------------------------
### from https://www.r-graph-gallery.com/
library(ggplot2)
library(abind)
detach("package:abind", unload = TRUE)
#### Densities ------------------------------------------
### from https://www.r-graph-gallery.com/
library(ggplot2)
ggplot(data = diamonds, aes(x = price, group = cut, fill = cut)) +
geom_density(adjust = 1.5, alpha = .3) +
theme_classic()
#### Scatterplot ----------------------------------------
ggplot(data = mpg, aes(x = displ, y = hwy, col = cyl)) +
geom_smooth() +
geom_point() +
theme_classic()
#### Scatterplot with equation --------------------------
### from http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/78-perfect-scatter-plots-with-correlation-and-marginal-histograms/
library(ggpubr)
#### Scatterplot ----------------------------------------
ggplot(data = mpg, aes(x = displ, y = hwy, col = cyl)) +
geom_smooth() +
geom_point() +
theme_classic()
#### Densities ------------------------------------------
### from https://www.r-graph-gallery.com/
library(ggplot2)
#### Densities ------------------------------------------
### from https://www.r-graph-gallery.com/
library(ggplot2)
#### Densities ------------------------------------------
### from https://www.r-graph-gallery.com/
library(ggplot2)
ggplot(data = diamonds, aes(x = price, group = cut, fill = cut)) +
geom_density(adjust = 1.5, alpha = .3) +
theme_classic()
#### Scatterplot ----------------------------------------
ggplot(data = mpg, aes(x = displ, y = hwy, col = cyl)) +
geom_smooth() +
geom_point() +
theme_classic()
#### Scatterplot with equation --------------------------
### from http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/78-perfect-scatter-plots-with-correlation-and-marginal-histograms/
library(ggpubr)
d <- mtcars
d$cyl <- as.factor(d$cyl)
ggscatter(d, x = "wt", y = "mpg",
add = "reg.line",                         # Add regression line
conf.int = TRUE,                          # Add confidence interval
color = "cyl", palette = "jco",           # Color by groups "cyl"
shape = "cyl"                             # Change point shape by groups "cyl"
) +
stat_cor(aes(color = cyl), label.x = 3)           # Add correlation coefficient
#### Boxplot and violinplot -----------------------------
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len)) +
geom_violin(trim = FALSE, fill = "gray") +
labs(title = "Plot of length  by dose", x = "Dose (mg)", y = "Length") +
geom_boxplot(width = 0.1) +
theme_classic()
#### Alluvial plot ---------------------------------------
library(alluvial)
# Titanic data
tit <- as.data.frame(Titanic)
# 4d
alluvial( tit[,1:4], freq=tit$Freq, border=NA,
hide = tit$Freq < quantile(tit$Freq, .50),
col=ifelse( tit$Class == "3rd" & tit$Sex == "Male", "red", "gray") )
library(ggplot2)
library(viridis)
library(ggridges)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0.01, 0)) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE',
subtitle = 'Mean temperatures (Fahrenheit) by month for 2016\nData: Original CSV from the Weather Underground') +
theme_ridges(font_size = 13, grid = TRUE) + theme(axis.title.y = element_blank())
### Let's select two of them
View(iris)
### Read the excel file. By default read the 1st sheet
xls.iris <- read_excel("data/iris-sprays.xlsx")
#### Export data to csv --------------------------
### Create data folder if it does not exist
if (!dir.exists("data")) dir.create("data")
### Export iris dataframe to a csv file
write.csv(iris, "data/iris.csv", row.names = FALSE,
fileEncoding = 'utf-8')
#### Import data from csv -----------------------
csv.iris <- read.csv("data/iris.csv", fileEncoding = 'utf-8')
#### Export data to Excel ------------------------
### We need to install a package.
### The code of install.packages is always commented.
### Select the code and run (or uncomment, run and comment again).
# install.packages("writexl")
### Load the installed package
library(writexl)
### Write the excel file
write_xlsx(iris, "data/iris.xlsx")
### to save several spreadsheets in a file
write_xlsx(list(iris = iris, sprays = InsectSprays),
"data/iris-sprays.xlsx")
#### Import data from Excel ----------------------
### We need other package to read Excel
# install.packages('readxl')
library(readxl)
### Read the excel file. By default read the 1st sheet
xls.iris <- read_excel("data/iris-sprays.xlsx")
### To read other sheet, you have to name it
xls.sprays <- read_excel("data/iris-sprays.xlsx", sheet = "sprays")
#### Package to download data directly from Drive spreadsheets -------
# install.packages('gsheet')
library(gsheet)
u <-  # google sheet adress
'docs.google.com/spreadsheets/d/1a1IBESUl__i2GcH4d-52MVEyXNytpTua7Vdxr0TXkhQ/edit?usp=sharing'
d0 <- gsheet2tbl(u)
#### Scatterplot ----------------------------------------
ggplot(data = mpg, aes(x = displ, y = hwy, col = cyl)) +
geom_smooth() +
geom_point() +
theme_classic()
#### Scatterplot ----------------------------------------
ggplot(data = mpg, aes(x = displ, y = hwy, col = cyl)) +
geom_smooth() +
geom_point() +
theme_classic()
#### Scatterplot with equation --------------------------
### from http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/78-perfect-scatter-plots-with-correlation-and-marginal-histograms/
library(ggpubr)
d <- mtcars
d$cyl <- as.factor(d$cyl)
ggscatter(d, x = "wt", y = "mpg",
add = "reg.line",                         # Add regression line
conf.int = TRUE,                          # Add confidence interval
color = "cyl", palette = "jco",           # Color by groups "cyl"
shape = "cyl"                             # Change point shape by groups "cyl"
) +
stat_cor(aes(color = cyl), label.x = 3)           # Add correlation coefficient
#### Densities ------------------------------------------
### from https://www.r-graph-gallery.com/
library(ggplot2)
ggplot(data = diamonds, aes(x = price, group = cut, fill = cut)) +
geom_density(adjust = 1.5, alpha = .3) +
theme_classic()
#### Scatterplot ----------------------------------------
ggplot(data = mpg, aes(x = displ, y = hwy, col = cyl)) +
geom_smooth() +
geom_point() +
theme_classic()
#### Scatterplot with equation --------------------------
### from http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/78-perfect-scatter-plots-with-correlation-and-marginal-histograms/
library(ggpubr)
d <- mtcars
d$cyl <- as.factor(d$cyl)
ggscatter(d, x = "wt", y = "mpg",
add = "reg.line",                         # Add regression line
conf.int = TRUE,                          # Add confidence interval
color = "cyl", palette = "jco",           # Color by groups "cyl"
shape = "cyl"                             # Change point shape by groups "cyl"
) +
stat_cor(aes(color = cyl), label.x = 3)           # Add correlation coefficient
#### Boxplot and violinplot -----------------------------
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len)) +
geom_violin(trim = FALSE, fill = "gray") +
labs(title = "Plot of length  by dose", x = "Dose (mg)", y = "Length") +
geom_boxplot(width = 0.1) +
theme_classic()
#### Alluvial plot ---------------------------------------
library(alluvial)
# Titanic data
tit <- as.data.frame(Titanic)
# 4d
alluvial( tit[,1:4], freq=tit$Freq, border=NA,
hide = tit$Freq < quantile(tit$Freq, .50),
col=ifelse( tit$Class == "3rd" & tit$Sex == "Male", "red", "gray") )
library(ggplot2)
library(viridis)
library(ggridges)
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0.01, 0)) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE',
subtitle = 'Mean temperatures (Fahrenheit) by month for 2016\nData: Original CSV from the Weather Underground') +
theme_ridges(font_size = 13, grid = TRUE) + theme(axis.title.y = element_blank())
install.packages(c("webshot", "webshot2"))
